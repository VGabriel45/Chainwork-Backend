type SignInResponse {
    user: User!
    accessToken: String!
    refreshToken: String!
}

type SignupResponse {
  user: User,
  accessToken: String,
  refreshToken: String
}

type RefreshAccessTokenResponse {
  accessToken: String
}

type JwtPayload {
  username: String!
  sub: Int!
  iat: Int!
  exp: Int!
}

input SignInUserInput {
    username: String!
    password: String!
}

input SignupUserInput {
  username: String!
  password: String!
  email: String!
  roleId: Int!
}

input RefreshInput {
  refreshToken: String!
  userId: Int!
}

type Mutation {
  signIn(signInUserInput: SignInUserInput!): SignInResponse
  signUp(signUpUserInput: SignupUserInput!): SignupResponse
  logout(userId: Int!): Int
  refreshAccessToken(refreshInput: RefreshInput!): RefreshAccessTokenResponse
}